
:javascript
  $(function() {
    var model = 
      new (function() {
        this.categories=parsedCategories;
        
        this.header = {
          purchase: {
            inventory:function(){return"Purchase Price"},
            quantity:function(){return"Quantity"},
            total:function(){return"Totals"}
          }, revenue: {
            inventory:function(){return"Price List"},
            quantity:function(){return"Quantity Sold"},
            total:function(){return"Total Revenue"}
          }
        };
        
        this.label = this.header.#{mode};
        
        this.value = {
          inventory:function(data) {return data.#{field}_price},
          quantity:function(data) {return data.#{field}_amount},
          total:function(data) {return ko.observable(parseFloat(data.#{field}_amount()*data.#{field}_price()).toFixed(2))}
        };
        
        var summary_impl = function(fun) {
            return function(data) {
              return ko.computed(function() {
                var x = new Array(4);
                var l = data().length/x.length;
                
                for(var i = 0; i < x.length; i++) {
                  var t = 0;
                  
                  for(var j = 0; j < l; j++) {
                    t+=fun(data()[i*l+j])();
                  }
                  
                  x[i]=(parseFloat(t)/parseFloat(l)).toFixed(2);
                }
                
                return x;
              });
            };
          };
          
        var self = this;
      
      this.summary = {
        inventory:summary_impl(self.value["inventory"]),
        quantity:summary_impl(self.value["quantity"]),
        total:summary_impl(self.value["total"]) 
      };
    })();
    ko.applyBindings(model,$("#sheets-#{mode}")[0]);
  });

%div{"id"=>"sheets-#{mode}"}
  = render partial:"table", locals:{mode:"inventory",readonly:""}    
  = render partial:"table", locals:{mode:"quantity",readonly:""}
  = render partial:"table", locals:{mode:"total",readonly:"readonly"}
